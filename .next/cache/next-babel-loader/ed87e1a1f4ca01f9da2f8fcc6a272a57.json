{"ast":null,"code":"import \"antd/lib/form/style/css\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/icon/style/css\";\nimport _Icon from \"antd/lib/icon\";\nimport _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nimport \"antd/lib/notification/style/css\";\nimport _notification from \"antd/lib/notification\";\nvar _jsxFileName = \"C:\\\\GitHub-Projects\\\\gm5(new)\\\\gm5-teste\\\\components\\\\MiniFormCaption\\\\Caption.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { withFormik } from \"formik\";\nimport yup from \"../../libs/yup\";\nimport SubmitButton from \"./SubmitButton\";\n\nvar axios = require(\"axios\"); // Fields Validation Rules\n\n\nconst formikEnhancer = withFormik({\n  validationSchema: yup.object().shape({\n    name: yup.string().min(6).required(\"Nome Obrigatório\"),\n    email: yup.string().email().required(\"Digite seu Email\"),\n    phone: yup.string().min(13).required(\"Digite seu Telefone\")\n  }),\n  mapPropsToValues: () => ({\n    name: \"\",\n    email: \"\",\n    phone: \"\"\n  }),\n  handleSubmit: (values, {\n    setStatus,\n    setSubmitting\n  }) => {\n    // Submit Logic\n    setSubmitting(true);\n    const {\n      name,\n      email,\n      phone\n    } = values;\n\n    if (name && email && phone) {\n      //Envia Form\n      axios.post(\"https://oq4segghm4.execute-api.us-east-1.amazonaws.com/staging/enrollments\", {\n        name,\n        email,\n        phone\n      }, {\n        headers: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      }).then(response => {\n        setStatus({\n          status: \"Sucesso\",\n          successMessage: response\n        });\n        console.log(\"sucesso\", response);\n        setSubmitting(false);\n      }).catch(error => {\n        console.log(\"error\", error);\n        openNotificationWithIcon(\"error\", error.message);\n        setStatus({\n          errorMessage: error\n        });\n        setSubmitting(false);\n      });\n    } else {\n      openNotificationWithIcon(\"error\", \"Verifique os campos e tente novamente.\");\n      setStatus({\n        errorMessage: \"Verifique os Campos\"\n      });\n      setSubmitting(false);\n    }\n  },\n  displayName: \"LoginForm\"\n}); // Notification Feedback modal\n\nconst openNotificationWithIcon = (type, description) => {\n  _notification[type]({\n    message: \"Ops! Algo deu Errado\",\n    description: description\n  });\n};\n\nfunction Caption(props) {\n  const {\n    values,\n    touched,\n    errors,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n  } = props; // Get validation status from field\n\n  function getValidateStatus(param) {\n    return errors[param] && touched[param] ? \"error\" : touched[param] ? \"success\" : \"\";\n  } // Handle Touched condition\n\n\n  function handleFormSubmit() {\n    const {\n      name,\n      email,\n      phone\n    } = values;\n\n    if (name && email && phone) {\n      _Object$entries(errors).length === 0 ? props.submitForm() : openNotificationWithIcon(\"error\", \"Verifique os campos assinalados.\");\n    } else {\n      props.setFieldTouched(\"name\");\n      props.setFieldTouched(\"email\");\n      props.setFieldTouched(\"phone\");\n      openNotificationWithIcon(\"error\", \"Verifique os campos assinalados.\");\n    }\n  }\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, __jsx(_Form.Item, {\n    hasFeedback: true,\n    validateStatus: getValidateStatus(\"name\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(_Input, {\n    id: \"name\",\n    placeholder: \"Seu Nome\",\n    size: \"large\",\n    value: values.name,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    prefix: __jsx(_Icon, {\n      type: \"user\",\n      style: {\n        color: \"rgba(0,0,0,.25)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), __jsx(_Form.Item, {\n    hasFeedback: true,\n    validateStatus: getValidateStatus(\"email\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, __jsx(_Input, {\n    id: \"email\",\n    placeholder: \"Seu E-mail\",\n    size: \"large\",\n    value: values.email,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    prefix: __jsx(_Icon, {\n      type: \"mail\",\n      style: {\n        color: \"rgba(0,0,0,.25)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })), __jsx(_Form.Item, {\n    hasFeedback: true,\n    validateStatus: getValidateStatus(\"phone\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, __jsx(_Input, {\n    id: \"phone\",\n    placeholder: \"(XX) X-XXXX-XXXX\",\n    size: \"large\",\n    value: values.phone,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    prefix: __jsx(_Icon, {\n      type: \"phone\",\n      style: {\n        color: \"rgba(0,0,0,.25)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })), __jsx(\"span\", {\n    onClick: handleFormSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, __jsx(SubmitButton, {\n    content: isSubmitting ? __jsx(_Icon, {\n      type: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }) : \"Realizar inscrição\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }), isSubmitting ? \"enviando\" : \"asdasd\"));\n}\n\nexport default formikEnhancer(Caption);","map":{"version":3,"sources":["C:/GitHub-Projects/gm5(new)/gm5-teste/components/MiniFormCaption/Caption.js"],"names":["React","withFormik","yup","SubmitButton","axios","require","formikEnhancer","validationSchema","object","shape","name","string","min","required","email","phone","mapPropsToValues","handleSubmit","values","setStatus","setSubmitting","post","headers","then","response","status","successMessage","console","log","catch","error","openNotificationWithIcon","message","errorMessage","displayName","type","description","Caption","props","touched","errors","handleChange","handleBlur","isSubmitting","getValidateStatus","param","handleFormSubmit","length","submitForm","setFieldTouched","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form, Input, notification, Icon } from \"antd\";\nimport { withFormik } from \"formik\";\nimport yup from \"../../libs/yup\";\nimport SubmitButton from \"./SubmitButton\";\nvar axios = require(\"axios\");\n\n// Fields Validation Rules\nconst formikEnhancer = withFormik({\n  validationSchema: yup.object().shape({\n    name: yup\n      .string()\n      .min(6)\n      .required(\"Nome Obrigatório\"),\n    email: yup\n      .string()\n      .email()\n      .required(\"Digite seu Email\"),\n    phone: yup\n      .string()\n      .min(13)\n      .required(\"Digite seu Telefone\")\n  }),\n  mapPropsToValues: () => ({\n    name: \"\",\n    email: \"\",\n    phone: \"\"\n  }),\n  handleSubmit: (values, { setStatus, setSubmitting }) => {\n    // Submit Logic\n    setSubmitting(true);\n    const { name, email, phone } = values;\n    if (name && email && phone) {\n      //Envia Form\n      axios\n        .post(\n          \"https://oq4segghm4.execute-api.us-east-1.amazonaws.com/staging/enrollments\",\n          {\n            name,\n            email,\n            phone\n          }, {\n            headers: {'Access-Control-Allow-Origin': '*'}\n          }\n        )\n        .then(response => {\n          setStatus({ status: \"Sucesso\", successMessage: response });\n          console.log(\"sucesso\", response);\n          setSubmitting(false);\n        })\n        .catch(error => {\n          console.log(\"error\", error);\n          openNotificationWithIcon(\"error\", error.message);\n          setStatus({ errorMessage: error });\n          setSubmitting(false);\n        });\n    } else {\n      openNotificationWithIcon(\n        \"error\",\n        \"Verifique os campos e tente novamente.\"\n      );\n      setStatus({ errorMessage: \"Verifique os Campos\" });\n      setSubmitting(false);\n    }\n  },\n  displayName: \"LoginForm\"\n});\n\n// Notification Feedback modal\nconst openNotificationWithIcon = (type, description) => {\n  notification[type]({\n    message: \"Ops! Algo deu Errado\",\n    description: description\n  });\n};\n\nfunction Caption(props) {\n  const {\n    values,\n    touched,\n    errors,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n  } = props;\n\n  // Get validation status from field\n  function getValidateStatus(param) {\n    return errors[param] && touched[param]\n      ? \"error\"\n      : touched[param]\n      ? \"success\"\n      : \"\";\n  }\n\n  // Handle Touched condition\n  function handleFormSubmit() {\n    const { name, email, phone } = values;\n    if (name && email && phone) {\n      Object.entries(errors).length === 0\n        ? props.submitForm()\n        : openNotificationWithIcon(\"error\", \"Verifique os campos assinalados.\");\n    } else {\n      props.setFieldTouched(\"name\");\n      props.setFieldTouched(\"email\");\n      props.setFieldTouched(\"phone\");\n      openNotificationWithIcon(\"error\", \"Verifique os campos assinalados.\");\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Form.Item hasFeedback validateStatus={getValidateStatus(\"name\")}>\n        <Input\n          id=\"name\"\n          placeholder=\"Seu Nome\"\n          size=\"large\"\n          value={values.name}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n        />\n      </Form.Item>\n      <Form.Item hasFeedback validateStatus={getValidateStatus(\"email\")}>\n        <Input\n          id=\"email\"\n          placeholder=\"Seu E-mail\"\n          size=\"large\"\n          value={values.email}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n        />\n      </Form.Item>\n      <Form.Item hasFeedback validateStatus={getValidateStatus(\"phone\")}>\n        <Input\n          id=\"phone\"\n          placeholder=\"(XX) X-XXXX-XXXX\"\n          size=\"large\"\n          value={values.phone}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          prefix={<Icon type=\"phone\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n        />\n      </Form.Item>\n      <span onClick={handleFormSubmit}>\n        <SubmitButton\n          content={\n            isSubmitting ? <Icon type=\"loading\" /> : \"Realizar inscrição\"\n          }\n        />\n        {isSubmitting ? \"enviando\" : \"asdasd\"}\n      </span>\n    </form>\n  );\n}\n\nexport default formikEnhancer(Caption);\n"]},"metadata":{},"sourceType":"module"}